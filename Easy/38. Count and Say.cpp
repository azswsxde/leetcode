class Solution
{
    private:
        string every_5_correct_result[6]; //5~30
    public:
        Solution ()
        {
            every_5_correct_result[0] = "111221";
            every_5_correct_result[1] = "13211311123113112211";
            every_5_correct_result[2] = "311311222113111231131112132112311321322112111312211312111322212311322113212221";
            every_5_correct_result[3] = "11131221131211132221232112111312111213111213211231132132211211131221131211221321"
                                        "12311321322112311311222113111231133221121113122113121113221112131221123113111231"
                                        "12112322211213211321322113311213212312311211131122211213211331121321123123211231"
                                        "13112221121113122113121113123112112322111213211322211312113211";
            every_5_correct_result[4] = "13211321322113311213212312311211131122211213211331121321123123211231131122211211"
                                        "13122113111231133221121321132122311211131122211213211321322112312321123113213221"
                                        "12311311222113111231133221121113122113121113221112131221123113111231121123222112"
                                        "13211321322113311213212312311211131211131221223113112221131112311332211211131221"
                                        "13121113221112131221123113111231121123222112111312211312111322212321121113121112"
                                        "13111213211231132132211211131221232112111312212221121123222112132113213221133112"
                                        "13212312311211131122211213211321322113221321132132211231131122211331121321232221"
                                        "12111312211312112213211231132132211211131221131211322113321132211221121332211231"
                                        "13112221131112311332111213122112311311123112111331121113122112132113121113222112"
                                        "31131122111213122112311311222112111331121113112221121113122113121113222112132113"
                                        "21322123211211131211121332211231131122211311122122111312211213211312111322211231"
                                        "13112221131112311332211211133112111311222112111312211311123113322112111312211312"
                                        "11132221232112111312111213322112132113213221133112132123123112111311222112132113"
                                        "21223112111311222112111312211312113221133221121113122113221321132132211231131122"
                                        "21131112311311121321122112132231121113122113322113111221131221";
            every_5_correct_result[5] = "31131122211311123113321112131221123113111231121113311211131221121321131211132221"
                                        "12311311221112131221123113112221121113311211131122211211131221131211132221121321"
                                        "13213221232112111312111213322112311311222113111221221113122112132113121113222112"
                                        "31131122211311123113322112111331121113112221121113122113111231133221121113122113"
                                        "12111322212321121113121112133221121321132132211331121321132213211231132132211211"
                                        "13122123211211131221222112112322211231131122211311123113321112132132112211131221"
                                        "13121113222112132113213221232112111312111213322112311311222113111231133211121312"
                                        "21123113111231121123222112111331121113112221121113122113111231133221121113122113"
                                        "12111322111213122112311311123112112322211211131221131211132221232112111312111213"
                                        "11121321123113213221121113122123211211131221222112112322211213211321322113311213"
                                        "21231231121113112221121321132132211322132113213221123113112221133112132123222112"
                                        "11131221131211221321123113213221121113122113121132211332113221122112133221123113"
                                        "11222113111231133211121312211231131112311211133112111312211213211312111322211231"
                                        "13112211121312211231131122211211133112111311222112111312211312111322211213211321"
                                        "22311211131122211213211321322113312221131122112211131221131211132221232112111312"
                                        "11121311121321123113213221121113122123211211131221222112112322211213211321322113"
                                        "31121321231231121113112221121321132132211322132113213221123113112221133112132123"
                                        "22211211131221131211221321123113213221121113122113121132211332113221122112133221"
                                        "12132113213221133112132123123112111311222112132113311213211231232112311311222112"
                                        "11131221131112311332211213211321223112111311222112132113213221123123211231132132"
                                        "21123113112221131112311332211211131221131211132211121312211231131112311211232221"
                                        "12132113213221133122112231131122211211131221131112311332211213211321322113312221"
                                        "13321112131122211332113221122112133221123113112221131112311332111213122112311311"
                                        "12311211133112111312211213211312111322211231131122111213122112311311222112111331"
                                        "12111311222112111312211312111322211213211321322123211211131211121332211231131122"
                                        "21131112311332111213122112311311123112112322211322311311222113111231133211121312"
                                        "21123113111231121123222112111312211312111322212321121113122113221113122112132113"
                                        "12111322211231131122111213122112311311221132211221121332211213211321322113311213"
                                        "21231231121113121113122122311311222113111231133221121113122113121113221112131221"
                                        "12311311123112112322211213211321322113311213212312311211131221132231121113311211"
                                        "13122112132113111231132231121113213221231221132221222112112322211211131221131211"
                                        "13222123211211131211121311121321123113213221121113122123211211131221121311121312"
                                        "21121321132132211231131122211331121321232221121113122113121122132112311321322112"
                                        "11131221131211132221121311121312211213211312111322211213211321322113311213212322"
                                        "21123113112221131112311322311211131122211213211331121321122112133221121113122113"
                                        "12111322212311222122132113213221123113112221133112132123222112111312211312111322"
                                        "21232112111312111213322112131112131221121321131211132221121321132132212321121113"
                                        "12111213322112132113213221133112132123123112111311222112132113311213211221121332"
                                        "21123113112221131112311332111213122112311311222113223113112221121113122113111231"
                                        "13322112132113212231121113112221121321132122211322212221121123222112111312211312"
                                        "11132221232112111312111213111213211231131112311311221122132113213221133112132123"
                                        "22211231131122211311123113223112111311222112132113311213211221121332211211131221"
                                        "13121113222123211211131211121311121321123113213221121113122123211211131221222112"
                                        "11232221121311121312211213211312111322211213211321322123211211131211121332211213"
                                        "21132132211331121321132213211231132132211211131221232112111312212221121123222112"
                                        "13211321322113311213212312311211131122211213211331121321123123211231131122211211"
                                        "13122113111231133221121321132122311211131122211213211321222113222122211211232221"
                                        "12311311222113111231133211121312211231131112311211133112111312211213211312111322"
                                        "21123113112211121312211231131122211211133112111311222112111312211312111322211213"
                                        "21132132212321121113121112133221123113112221131112311332111213213211221113122113"
                                        "12111322211213211321322123211211131211121332211213211321322113311213212312311211"
                                        "13122113223112111331121113122122211211232221121321132132211331121321232221132231"
                                        "13112221131112311332111213122112311311123112112322211211131221131211132221232112"
                                        "11131211121311121321123113213221121113122113121122132112311321322112311311222113"
                                        "11122113222123222112311311222113221113122113121113222112132113213221133112132113"
                                        "31121113122122211211132213211231131122212322211331222113112211";
        }
        void get_result(string& result, int times)
        {
            int index, len, count = 0;
            char c ;
            string temp = "";
            for (int i = 0; i < times; i++)
            {
                index = 0;
                len = result.length();
                while (index < len)
                {
                    if (count == 0)
                    {
                        count++;
                        c = result[index];
                    }
                    else
                    {
                        if (result[index] == c)
                        {
                            count++;
                        }
                        else
                        {
                            temp += (char)((int)'0' + count);
                            temp += c;
                            count = 0;
                            continue;
                        }
                    }
                    if (index == len -1)
                    {
                        temp += (char)((int)'0' + count);
                        temp += c;
                        count = 0;
                    }
                    index++;
                }
                result = temp;
                temp = "";
            }
        }
        string countAndSay(int n)
        {
            string result = "";
            if (n < 2)
            {
                return "1";
            }
            if (n / 5 > 0)
            {
                result = every_5_correct_result[(n / 5) - 1];
                get_result(result, n % 5);
            }
            else
            {
                result = "1";
                get_result(result, n % 5 - 1);
            }
            return result;
        }
};